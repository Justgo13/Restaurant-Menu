package restaurant.menu;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Integer.parseInt;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jgao2
 */
public class MenuOutline extends javax.swing.JFrame {

    /**
     * Creates new form MenuOutline
     */
    public MenuOutline() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuTitle = new javax.swing.JLabel();
        itemsPanel = new javax.swing.JPanel();
        itemsHeader = new javax.swing.JLabel();
        hamburgerItem = new javax.swing.JLabel();
        hamburgerAmount = new javax.swing.JTextField();
        hotDogItem = new javax.swing.JLabel();
        hotDogAmount = new javax.swing.JTextField();
        clubSandwichItem = new javax.swing.JLabel();
        clubSandwichAmount = new javax.swing.JTextField();
        donutItem = new javax.swing.JLabel();
        donutAmount = new javax.swing.JTextField();
        saladItem = new javax.swing.JLabel();
        saladAmount = new javax.swing.JTextField();
        applePieItem = new javax.swing.JLabel();
        applePieAmount = new javax.swing.JTextField();
        cokeItem = new javax.swing.JLabel();
        cokeAmount = new javax.swing.JTextField();
        spriteItem = new javax.swing.JLabel();
        spriteAmount = new javax.swing.JTextField();
        mountainDewItem = new javax.swing.JLabel();
        mountainDewAmount = new javax.swing.JTextField();
        receiptPanel = new javax.swing.JPanel();
        receiptHeader = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receiptArea = new javax.swing.JTextArea();
        orderButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(1280, 720));

        menuTitle.setFont(new java.awt.Font("Cooper Black", 1, 48)); // NOI18N
        menuTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuTitle.setText("Restaurant Menu");

        itemsPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        itemsHeader.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        itemsHeader.setText("Items");

        hamburgerItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        hamburgerItem.setText("Hamburger $5");

        hamburgerAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hamburgerAmountActionPerformed(evt);
            }
        });

        hotDogItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        hotDogItem.setText("Hot Dog $2");

        hotDogAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotDogAmountActionPerformed(evt);
            }
        });

        clubSandwichItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        clubSandwichItem.setText("Club Sandwich $10");

        clubSandwichAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clubSandwichAmountActionPerformed(evt);
            }
        });

        donutItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        donutItem.setText("Donut $1");

        donutAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donutAmountActionPerformed(evt);
            }
        });

        saladItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        saladItem.setText("Salad $4");

        saladAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saladAmountActionPerformed(evt);
            }
        });

        applePieItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        applePieItem.setText("Apple Pie $8");

        applePieAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applePieAmountActionPerformed(evt);
            }
        });

        cokeItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        cokeItem.setText("Coke $0.50");

        cokeAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cokeAmountActionPerformed(evt);
            }
        });

        spriteItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        spriteItem.setText("Sprite $0.50");

        spriteAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spriteAmountActionPerformed(evt);
            }
        });

        mountainDewItem.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        mountainDewItem.setText("Mountain Dew $0.50");

        mountainDewAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mountainDewAmountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemsPanelLayout = new javax.swing.GroupLayout(itemsPanel);
        itemsPanel.setLayout(itemsPanelLayout);
        itemsPanelLayout.setHorizontalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsPanelLayout.createSequentialGroup()
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(itemsHeader))
                    .addGroup(itemsPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemsPanelLayout.createSequentialGroup()
                                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hotDogItem)
                                    .addComponent(hamburgerItem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hotDogAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                                    .addComponent(hamburgerAmount)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemsPanelLayout.createSequentialGroup()
                                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cokeItem)
                                    .addComponent(applePieItem)
                                    .addComponent(saladItem)
                                    .addComponent(donutItem)
                                    .addComponent(clubSandwichItem)
                                    .addComponent(spriteItem)
                                    .addComponent(mountainDewItem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mountainDewAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                    .addComponent(spriteAmount)
                                    .addComponent(donutAmount)
                                    .addComponent(saladAmount)
                                    .addComponent(applePieAmount)
                                    .addComponent(cokeAmount)
                                    .addComponent(clubSandwichAmount, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        itemsPanelLayout.setVerticalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(itemsHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hamburgerItem)
                    .addComponent(hamburgerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemsPanelLayout.createSequentialGroup()
                        .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hotDogItem)
                            .addComponent(hotDogAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clubSandwichItem)
                            .addComponent(clubSandwichAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(donutItem)
                        .addGap(5, 5, 5))
                    .addComponent(donutAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saladItem)
                    .addComponent(saladAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applePieItem)
                    .addComponent(applePieAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cokeItem)
                    .addComponent(cokeAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spriteItem)
                    .addComponent(spriteAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mountainDewItem)
                    .addComponent(mountainDewAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        receiptPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(0, 0, 0)));

        receiptHeader.setFont(new java.awt.Font("Cooper Black", 0, 24)); // NOI18N
        receiptHeader.setText("Receipt");

        receiptArea.setColumns(20);
        receiptArea.setRows(5);
        receiptArea.setText("Quantity                                            Item                                       Price $");
        receiptArea.setEnabled(false);
        jScrollPane1.setViewportView(receiptArea);

        javax.swing.GroupLayout receiptPanelLayout = new javax.swing.GroupLayout(receiptPanel);
        receiptPanel.setLayout(receiptPanelLayout);
        receiptPanelLayout.setHorizontalGroup(
            receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receiptPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                    .addGroup(receiptPanelLayout.createSequentialGroup()
                        .addComponent(receiptHeader)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        receiptPanelLayout.setVerticalGroup(
            receiptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receiptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(receiptHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addGap(6, 6, 6))
        );

        orderButton.setFont(new java.awt.Font("Cooper Black", 0, 12)); // NOI18N
        orderButton.setText("ORDER");
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(itemsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(receiptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(menuTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(orderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receiptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hamburgerAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hamburgerAmountActionPerformed
        String hamburger = hamburgerAmount.getText();
    }//GEN-LAST:event_hamburgerAmountActionPerformed

    private void cokeAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cokeAmountActionPerformed
        String coke = cokeAmount.getText();
    }//GEN-LAST:event_cokeAmountActionPerformed

    private void saladAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saladAmountActionPerformed
        String salad = saladAmount.getText();
    }//GEN-LAST:event_saladAmountActionPerformed

    private void donutAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donutAmountActionPerformed
        String donut = donutAmount.getText();
    }//GEN-LAST:event_donutAmountActionPerformed

    private void hotDogAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotDogAmountActionPerformed
        String hotDog = hotDogAmount.getText();
    }//GEN-LAST:event_hotDogAmountActionPerformed

    private void clubSandwichAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clubSandwichAmountActionPerformed
        String clubSandwich = clubSandwichAmount.getText();
    }//GEN-LAST:event_clubSandwichAmountActionPerformed

    private void applePieAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applePieAmountActionPerformed
        String applePie = applePieAmount.getText();
    }//GEN-LAST:event_applePieAmountActionPerformed

    private void spriteAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spriteAmountActionPerformed
        String sprite = spriteAmount.getText();
    }//GEN-LAST:event_spriteAmountActionPerformed

    private void mountainDewAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mountainDewAmountActionPerformed
        String mountainDew  = mountainDewAmount.getText();
    }//GEN-LAST:event_mountainDewAmountActionPerformed

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        receiptArea.setEnabled(true);
        String hamburger = hamburgerAmount.getText();
        String coke = cokeAmount.getText();
        String salad = saladAmount.getText();
        String donut = donutAmount.getText();
        String hotDog = hotDogAmount.getText();
        String clubSandwich = clubSandwichAmount.getText();
        String applePie = applePieAmount.getText();
        String sprite = spriteAmount.getText();
        String mountainDew = mountainDewAmount.getText();
        
        FileWriter fileWriter = null;
        try {
            fileWriter = new FileWriter("c:/Users/jgao2/Documents/NetBeansProjects/Restaurant Menu/src/restaurant/menu/orderItems.txt",false);
        } catch (IOException ex) {
            Logger.getLogger(MenuOutline.class.getName()).log(Level.SEVERE, null, ex);
        }
        PrintWriter printWriter = new PrintWriter(fileWriter);
        
        float sum = 0;
        if (hamburger.length() > 0){
            float hamburgerSum = parseInt(hamburger)*5;
            sum += hamburgerSum;
            printWriter.printf(hamburger + " %60s","Hamburger");
            printWriter.printf("%35.2f",hamburgerSum);       
            printWriter.println();
        }
        if(hotDog.length() > 0){
            float hotDogSum = parseInt(hotDog)*2;
            sum += hotDogSum;
            printWriter.printf(hotDog + "%61s","Hot Dog");
            printWriter.printf("%39.2f",hotDogSum);       
            printWriter.println();
        }
        if(clubSandwich.length() > 0){
            float clubSandwichSum = parseInt(clubSandwich)*10;
            sum += clubSandwichSum;
            printWriter.printf(clubSandwich + "%64s","Club Sandwich");
            printWriter.printf("%29.2f",clubSandwichSum);       
            printWriter.println();
        } 
        if(donut.length() > 0){
            float donutSum = parseInt(donut)*1;
            sum += donutSum;
            printWriter.printf(donut + "%60s","Donut");
            printWriter.printf("%43.2f",donutSum);       
            printWriter.println();
        }        
        if(salad.length() > 0){
            float saladSum = parseInt(salad)*4;
            sum += saladSum;
            printWriter.printf(salad + "%60s","Salad");
            printWriter.printf("%43.2f",saladSum);                  
            printWriter.println();
        }
        if(applePie.length() > 0){
            float applePieSum = parseInt(applePie)*8;
            sum += applePieSum;
            printWriter.printf(applePie + "%63s","Apple Pie");
            printWriter.printf("%38.2f",applePieSum);       
            printWriter.println();
        }
        if(coke.length() > 0){
            float cokeSum = (float) (parseInt(coke)*0.50);
            sum += cokeSum;
            printWriter.printf(coke + "%60s","Coke");
            printWriter.printf("%43.2f",cokeSum);         
            printWriter.println();
        }
        if(sprite.length() > 0){
            float spriteSum = (float) (parseInt(sprite)*0.50);
            sum += spriteSum;
            printWriter.printf(sprite + "%60s","Sprite");
            printWriter.printf("%43.2f",spriteSum);
            printWriter.println();
        }
        printWriter.close();
        if(mountainDew.length() > 0){
            float mountainDewSum = (float) (parseInt(mountainDew)*0.50);
            sum += mountainDewSum;
            printWriter.printf(mountainDew + "%60s","Mountain Dew");
            printWriter.printf("%43.2f",mountainDewSum);
            printWriter.println();
        }
        try {
            BufferedReader br = new BufferedReader(new FileReader("c:/Users/jgao2/Documents/NetBeansProjects/Restaurant Menu/src/restaurant/menu/orderItems.txt"));
            //Scanner scanner = new Scanner(new File("c:/Users/jgao2/Documents/NetBeansProjects/Restaurant Menu/src/restaurant/menu/orderItems.txt"));
            String line = null;
            while ((line = br.readLine()) != null) {
                receiptArea.append("\n");
                receiptArea.append(line);
                receiptArea.append("\n");
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
	} catch (IOException ex) {
            Logger.getLogger(MenuOutline.class.getName()).log(Level.SEVERE, null, ex);
        }
        float HST = (float) (sum*0.13);
        float FinalCost = sum + HST;
        receiptArea.append("\nsubtotal: $" + sum);
        receiptArea.append("\nHST: $" + HST);
        receiptArea.append("\nFinal Cost: $" + FinalCost);
        
    }//GEN-LAST:event_orderButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuOutline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuOutline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuOutline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuOutline.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuOutline().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField applePieAmount;
    private javax.swing.JLabel applePieItem;
    private javax.swing.JTextField clubSandwichAmount;
    private javax.swing.JLabel clubSandwichItem;
    private javax.swing.JTextField cokeAmount;
    private javax.swing.JLabel cokeItem;
    private javax.swing.JTextField donutAmount;
    private javax.swing.JLabel donutItem;
    private javax.swing.JTextField hamburgerAmount;
    private javax.swing.JLabel hamburgerItem;
    private javax.swing.JTextField hotDogAmount;
    private javax.swing.JLabel hotDogItem;
    private javax.swing.JLabel itemsHeader;
    private javax.swing.JPanel itemsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel menuTitle;
    private javax.swing.JTextField mountainDewAmount;
    private javax.swing.JLabel mountainDewItem;
    private javax.swing.JButton orderButton;
    private javax.swing.JTextArea receiptArea;
    private javax.swing.JLabel receiptHeader;
    private javax.swing.JPanel receiptPanel;
    private javax.swing.JTextField saladAmount;
    private javax.swing.JLabel saladItem;
    private javax.swing.JTextField spriteAmount;
    private javax.swing.JLabel spriteItem;
    // End of variables declaration//GEN-END:variables
}
